"use strict";(self.webpackChunkkarabiner_ts_docs=self.webpackChunkkarabiner_ts_docs||[]).push([["4425"],{50601:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>i,metadata:()=>a,assets:()=>l,toc:()=>d,contentTitle:()=>o});var a=JSON.parse('{"id":"examples/vim/nested-leader-key","title":"Nested leader key","description":"To nest leader keys, use a variables:","source":"@site/docs/examples/vim/nested-leader-key.md","sourceDirName":"examples/vim","slug":"/examples/vim/nested-leader-key","permalink":"/examples/vim/nested-leader-key","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Nested leader key"},"sidebar":"docs","previous":{"title":"Input symbols","permalink":"/examples/text-input/symbols"}}'),r=t("85893"),s=t("50065");let i={title:"Nested leader key"},o=void 0,l={},d=[];function c(e){let n={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"To nest leader keys, use a variables:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set the variable on the leader key (Default value 1; 0 when unset)"}),"\n",(0,r.jsx)(n.li,{children:"Set the variable to different value on each nested leader key (other than 1 or 0)"}),"\n",(0,r.jsx)(n.li,{children:"Unset the variable on all action keys and escape key(s)"}),"\n",(0,r.jsx)(n.li,{children:"(optional) Use notification for hints"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Example code: ( ",(0,r.jsx)(n.a,{href:"/editor?example=vim/nested-leader-key",children:"Open in the online editor \u2192"})," )"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"let raycastEmoji = 'raycast/emoji-symbols/search-emoji-symbols'\nlet escape = [toUnsetVar('leader'), toRemoveNotificationMessage('leader')]\n\nlet rules = [\n  rule('Leader Key').manipulators([\n    // Leader key\n    map('l', 'Hyper') // Or mapSimultaneous(['l', ';']) ...\n      .toVar('leader', 1)\n      .toNotificationMessage('leader', 'Leader Key: Open, Raycast, ...')\n      .condition(ifVar('leader', 0)),\n\n    // Escape key(s)\n    map('escape').to(escape).condition(ifVar('leader', 0).unless()),\n\n    // Nested leader keys\n    withMapper(['o', 'r'])((x) =>\n      map(x)\n        .toVar('leader', x)\n        .toNotificationMessage('leader', `leader ${x}`)\n        .condition(ifVar('leader', 1)),\n    ),\n\n    // leader o - Open\n    withCondition(ifVar('leader', 'o'))(\n      [\n        map('f').toApp('Finder'),\n        // f - Finder, ...\n      ].map((x) => x.to(escape)),\n    ),\n\n    // leader r - Raycast\n    withCondition(ifVar('leader', 'r'))(\n      [\n        map('e').to$(`open raycast://extensions/${raycastEmoji}`),\n        // e - Emoji, ...\n      ].map((x) => x.to(escape)),\n    ),\n  ]),\n]\n\n"})})]})}function p(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return i}});var a=t(67294);let r={},s=a.createContext(r);function i(e){let n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);