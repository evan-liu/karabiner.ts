"use strict";(self.webpackChunkkarabiner_ts_docs=self.webpackChunkkarabiner_ts_docs||[]).push([["5373"],{3334:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>s,metadata:()=>i,assets:()=>d,toc:()=>c,contentTitle:()=>a});var i=JSON.parse('{"id":"utils","title":"Utilities","description":"There are a few util methods for reducing code duplication.","source":"@site/docs/utils.md","sourceDirName":".","slug":"/utils","permalink":"/utils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Utilities"},"sidebar":"docs","previous":{"title":"type: mouse_motion_to_scroll","permalink":"/manipulators/mouse_motion_to_scroll"},"next":{"title":"Output","permalink":"/output"}}'),o=t("85893"),r=t("50065");let s={title:"Utilities"},a=void 0,d={},c=[{value:"withMapper()",id:"with-mapper",level:2},{value:"withCondition()",id:"with-condition",level:2},{value:"withModifier()",id:"with-modifier",level:2}];function l(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"There are a few util methods for reducing code duplication."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#with-mapper",children:"withMapper()"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#with-condition",children:"withCondition()"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#with-modifier",children:"withModifier()"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"with-mapper",children:"withMapper()"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"withMapper()"})," takes either an array or a object, and a mapper function to\ncreate manipulators with each item."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"rule('mappers').manipulators([\n  //           1    2    3    4    5\n  withMapper(['\u2318', '\u2325', '\u2303', '\u21E7', '\u21EA'])((k, i) =>\n    map((i + 1) as NumberKeyValue).toPaste(k),\n  ),\n  withMapper({\n    c: 'Calendar',\n    f: 'Finder',\n  })((k, v) => map(k, 'Meh').toApp(v)),\n])\n"})}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Generated JSON"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "description": "mappers",\n  "manipulators": [\n    {\n      "type": "basic",\n      "from": {"key_code": "1"},\n      "to": [{"shell_command": "osascript -e \'\\nset prev to the clipboard\\nset the clipboard to \\"\u2318\\"\\ntell application \\"System Events\\"\\n  keystroke \\"v\\" using command down\\n  delay 0.1\\nend tell\\nset the clipboard to prev\'"}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "2"},\n      "to": [{"shell_command": "osascript -e \'\\nset prev to the clipboard\\nset the clipboard to \\"\u2325\\"\\ntell application \\"System Events\\"\\n  keystroke \\"v\\" using command down\\n  delay 0.1\\nend tell\\nset the clipboard to prev\'"}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "3"},\n      "to": [{"shell_command": "osascript -e \'\\nset prev to the clipboard\\nset the clipboard to \\"\u2303\\"\\ntell application \\"System Events\\"\\n  keystroke \\"v\\" using command down\\n  delay 0.1\\nend tell\\nset the clipboard to prev\'"}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "4"},\n      "to": [{"shell_command": "osascript -e \'\\nset prev to the clipboard\\nset the clipboard to \\"\u21E7\\"\\ntell application \\"System Events\\"\\n  keystroke \\"v\\" using command down\\n  delay 0.1\\nend tell\\nset the clipboard to prev\'"}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "5"},\n      "to": [{"shell_command": "osascript -e \'\\nset prev to the clipboard\\nset the clipboard to \\"\u21EA\\"\\ntell application \\"System Events\\"\\n  keystroke \\"v\\" using command down\\n  delay 0.1\\nend tell\\nset the clipboard to prev\'"}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "c", "modifiers": {"mandatory": ["option", "control", "shift"]}},\n      "to": [{"shell_command": "open -a \\"Calendar\\".app"}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "f", "modifiers": {"mandatory": ["option", "control", "shift"]}},\n      "to": [{"shell_command": "open -a \\"Finder\\".app"}]\n    }\n  ]\n}\n'})})]}),"\n",(0,o.jsxs)(n.p,{children:["Most of the time ",(0,o.jsx)(n.code,{children:"withMapper()"})," method can infer the type from the array or object.\nHowever it only infer the object value as generic types like ",(0,o.jsx)(n.code,{children:"string"}),", which is\nsometimes not enough for  the mappers. To solve this you can either manually add\nthe types to the method call, or add ",(0,o.jsx)(n.code,{children:"as const"})," on the object."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"withMapper<FromKeyParam, ToKeyParam>({})(/* ... */)\nwithMapper({} as const)(/* ... */)\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"as const"})," is simpler to add; the benefit of adding types to the method is code\ncompletion when writing the object."]}),"\n",(0,o.jsx)(n.h2,{id:"with-condition",children:"withCondition()"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"withCondition()"})," is useful when a subset of manipulators inside a rule or\nlayer/simlayer share the same condition(s)."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"rule('conditions').manipulators([\n  withCondition(ifDevice({ product_id: 1 }))([\n    map('a').to('x'), \n  ]),\n  withCondition(ifDevice({ product_id: 2 }))([\n    map('a').to('y'), \n  ]),\n])\n"})}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Generated JSON"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "description": "conditions",\n  "manipulators": [\n    {\n      "type": "basic",\n      "from": {"key_code": "a"},\n      "to": [{"key_code": "x"}],\n      "conditions": [{"type": "device_if", "identifiers": [{"product_id": 1}]}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "a"},\n      "to": [{"key_code": "y"}],\n      "conditions": [{"type": "device_if", "identifiers": [{"product_id": 2}]}]\n    }\n  ]\n}\n'})})]}),"\n",(0,o.jsx)(n.h2,{id:"with-modifier",children:"withModifier()"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"withModifier()"}),"add the same modifiers to a group of manipulators."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"rule('modifiers').manipulators([\n  withModifier('optionalAny')([\n    map(1, '\u2318').to('a'),\n    map(1, '\u2325').to('b'),\n  ]),\n])\n"})}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Generated JSON"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "description": "modifiers",\n  "manipulators": [\n    {\n      "type": "basic",\n      "from": {"key_code": "1", "modifiers": {"mandatory": ["command"], "optional": ["any"]}},\n      "to": [{"key_code": "a"}]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "1", "modifiers": {"mandatory": ["option"], "optional": ["any"]}},\n      "to": [{"key_code": "b"}]\n    }\n  ]\n}\n'})})]})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var i=t(67294);let o={},r=i.createContext(o);function s(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);